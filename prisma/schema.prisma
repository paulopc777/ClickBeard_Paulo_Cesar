generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Barber {
  id             String           @id @default(cuid())
  admin          Boolean          @default(false)
  name           String
  avatar         String?
  age            Int
  email          String           @unique
  password       String
  contact_date   DateTime?
  createdAt      DateTime         @default(now())
  updatedAt      DateTime         @updatedAt
  BarberServices BarberServices[]
  Schedules      Schedules[]
}

model BarberServices {
  id        String   @id @default(cuid())
  barberId  String
  serviceId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  barber  Barber  @relation(fields: [barberId], references: [id])
  service Service @relation(fields: [serviceId], references: [id])
}

model Service {
  id            String           @id @default(cuid())
  name          String
  image         String?
  price         Float
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  BarberService BarberServices[]
  Schedules     Schedules[]
}

model Schedules {
  id        String   @id @default(cuid())
  barberId  String
  startTime DateTime // Formato HH:MM (ex: "09:00")
  endTime   DateTime // Formato HH:MM (ex: "18:00")
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  serviceId String

  service Service @relation(fields: [serviceId], references: [id])
  barber  Barber  @relation(fields: [barberId], references: [id])
}

enum DayOfWeek {
  MONDAY
  TUESDAY
  WEDNESDAY
  THURSDAY
  FRIDAY
  SATURDAY
  SUNDAY
}

model WorkingSchedule {
  id               String    @id @default(cuid())
  dayOfWeek        DayOfWeek
  dayOfWeek_number Int
  startTime        String // Formato HH:MM (ex: "09:00")
  endTime          String // Formato HH:MM (ex: "18:00")
  lunchStart       String? // Formato HH:MM (ex: "12:00") - opcional
  lunchEnd         String? // Formato HH:MM (ex: "13:00") - opcional
  isActive         Boolean   @default(true)
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
}
